{"version":3,"sources":["js/Utils/EventEmitter.js"],"names":["EventEmitter","callbacks","base","_names","callback","that","console","warn","names","resolveNames","forEach","_name","name","resolveName","namespace","Object","value","Array","push","keys","length","_args","finalResult","result","args","apply","replace","split","newName","parts","original"],"mappings":"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","file":"EventEmitter.4a17695f.js","sourceRoot":"../src","sourcesContent":["export default class EventEmitter\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n        this.callbacks = {}\n        this.callbacks.base = {}\n    }\n\n    /**\n     * On\n     */\n    on(_names, callback)\n    {\n        const that = this\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong names')\n            return false\n        }\n\n        if(typeof callback === 'undefined')\n        {\n            console.warn('wrong callback')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach(function(_name)\n        {\n            // Resolve name\n            const name = that.resolveName(_name)\n\n            // Create namespace if not exist\n            if(!(that.callbacks[ name.namespace ] instanceof Object))\n                that.callbacks[ name.namespace ] = {}\n\n            // Create callback if not exist\n            if(!(that.callbacks[ name.namespace ][ name.value ] instanceof Array))\n                that.callbacks[ name.namespace ][ name.value ] = []\n\n            // Add callback\n            that.callbacks[ name.namespace ][ name.value ].push(callback)\n        })\n        return this\n    }\n\n    /**\n     * Off\n     */\n    off(_names)\n    {\n        const that = this\n\n        // Errors\n        if(typeof _names === 'undefined' || _names === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n\n        // Resolve names\n        const names = this.resolveNames(_names)\n\n        // Each name\n        names.forEach(function(_name)\n        {\n            // Resolve name\n            const name = that.resolveName(_name)\n\n            // Remove namespace\n            if(name.namespace !== 'base' && name.value === '')\n            {\n                delete that.callbacks[ name.namespace ]\n            }\n\n            // Remove specific callback in namespace\n            else\n            {\n                // Default\n                if(name.namespace === 'base')\n                {\n                    // Try to remove from each namespace\n                    for(const namespace in that.callbacks)\n                    {\n                        if(that.callbacks[ namespace ] instanceof Object && that.callbacks[ namespace ][ name.value ] instanceof Array)\n                        {\n                            delete that.callbacks[ namespace ][ name.value ]\n\n                            // Remove namespace if empty\n                            if(Object.keys(that.callbacks[ namespace ]).length === 0)\n                                delete that.callbacks[ namespace ]\n                        }\n                    }\n                }\n\n                // Specified namespace\n                else if(that.callbacks[ name.namespace ] instanceof Object && that.callbacks[ name.namespace ][ name.value ] instanceof Array)\n                {\n                    delete that.callbacks[ name.namespace ][ name.value ]\n\n                    // Remove namespace if empty\n                    if(Object.keys(that.callbacks[ name.namespace ]).length === 0)\n                        delete that.callbacks[ name.namespace ]\n                }\n            }\n        })\n\n        return this\n    }\n\n    /**\n     * Trigger\n     */\n    trigger(_name, _args)\n    {\n        // Errors\n        if(typeof _name === 'undefined' || _name === '')\n        {\n            console.warn('wrong name')\n            return false\n        }\n        \n\n        const that = this\n        let finalResult = null\n        let result = null\n\n        // Default args\n        const args = !(_args instanceof Array) ? [] : _args\n\n        // Resolve names (should on have one event)\n        let name = this.resolveNames(_name)\n\n        // Resolve name\n        name = this.resolveName(name[ 0 ])\n\n        // Default namespace\n        if(name.namespace === 'base')\n        {\n            // Try to find callback in each namespace\n            for(const namespace in that.callbacks)\n            {\n                if(that.callbacks[ namespace ] instanceof Object && that.callbacks[ namespace ][ name.value ] instanceof Array)\n                {\n                    that.callbacks[ namespace ][ name.value ].forEach(function(callback)\n                    {\n                        result = callback.apply(that, args)\n\n                        if(typeof finalResult === 'undefined')\n                        {\n                            finalResult = result\n                        }\n                    })\n                }\n            }\n        }\n\n        // Specified namespace\n        else if(this.callbacks[ name.namespace ] instanceof Object)\n        {\n            if(name.value === '')\n            {\n                console.warn('wrong name')\n                return this\n            }\n\n            that.callbacks[ name.namespace ][ name.value ].forEach(function(callback)\n            {\n                result = callback.apply(that, args)\n\n                if(typeof finalResult === 'undefined')\n                    finalResult = result\n            })\n        }\n\n        return finalResult\n    }\n\n    /**\n     * Resolve names\n     */\n    resolveNames(_names)\n    {\n        let names = _names\n        names = names.replace(/[^a-zA-Z0-9 ,/.]/g, '')\n        names = names.replace(/[,/]+/g, ' ')\n        names = names.split(' ')\n\n        return names\n    }\n\n    /**\n     * Resolve name\n     */\n    resolveName(name)\n    {\n        const newName = {}\n        const parts = name.split('.')\n\n        newName.original  = name\n        newName.value     = parts[ 0 ]\n        newName.namespace = 'base' // Base namespace\n\n        // Specified namespace\n        if(parts.length > 1 && parts[ 1 ] !== '')\n        {\n            newName.namespace = parts[ 1 ]\n        }\n\n        return newName\n    }\n}\n"]}